{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Watchlist-NetWork-Addresses",
        "description": "This playbook checks whether the IP address entities are within the IP range of the Network Addresses watchlist",
        "prerequisites": ["The watchlist Network Addresses must be present and contain data"],
    "postDeployment": [],
    "prerequisitesDeployTemplateFile": "",
    "lastUpdateTime": "",
"entities": [],
"tags": [],
"support": {
"tier": "community",
"armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
},
"author": {
"name": "Alex Verboon"
}
},
"parameters": {
"PlaybookName": {
"defaultValue": "Watchlist-NetWork-Addresses",
"type": "string"
}
},
"variables": {
"AzuremonitorlogsConnectionName": "[concat('Azuremonitorlogs-', parameters('PlaybookName'))]",
"MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]"
},
"resources": [
{
"properties": {
    "provisioningState": "Succeeded",
    "state": "Enabled",
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {
            "$connections": {
            "defaultValue": {},
            "type": "Object"
        }
    },
    "triggers": {
        "Microsoft_Sentinel_incident": {
            "type": "ApiConnectionWebhook",
            "inputs": {
                "body": {
                    "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                    }
                },
                "path": "/incident-creation"
            }
        }
    },
    "actions": {
        "Add_comment_to_incident_(V3)": {
            "runAfter": {
                "Create_HTML_table_-_not_safe": [
                    "Succeeded"
                ]
            },
            "type": "ApiConnection",
            "inputs": {
                "body": {
                    "incidentArmId": "@triggerBody()?['object']?['id']",
                    "message": "<p>A playbook ran to check if the IPs in this incident are part of the Network Addresses IPs watchlist (@{variables('WatchlistName')}).<br>\nThe following IPs &nbsp;found:<br>\n@{body('Create_HTML_table_-_safe')}<br>\n@{body('Create_HTML_table_-_not_safe')}</p>"
                },
                "host": {
                    "connection": {
                        "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                    }
                },
                "method": "post",
                "path": "/Incidents/Comment"
            }
        },
        "Condition": {
        "actions": {},
        "runAfter": {
            "Add_comment_to_incident_(V3)": [
                "Succeeded"
            ]
        },
        "expression": {
            "and": [
                {
                    "equals": [
                        "@length(variables('notSafeIPs'))",
                        0
                    ]
                }
            ]
        },
        "type": "If",
        "description": "This condition checks if all IPs involved in this alert are safe (found in watchlist)"
    },
    "Create_HTML_table_-_not_safe": {
        "runAfter": {
            "Create_HTML_table_-_safe": [
                "Succeeded"
            ]
        },
        "type": "Table",
        "inputs": {
            "format": "HTML",
            "from": "@variables('notSafeIPs')"
        }
    },
    "Create_HTML_table_-_safe": {
        "runAfter": {
            "For_each": [
                "Succeeded"
            ]
        },
        "type": "Table",
        "inputs": {
            "format": "HTML",
            "from": "@variables('SafeIPs')"
        }
    },
    "Entities_-_Get_IPs": {
        "runAfter": {
            "Initialize_variable_-_not_safe_IPs": [
                "Succeeded"
            ]
        },
        "type": "ApiConnection",
        "inputs": {
            "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
            "host": {
                "connection": {
                    "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                }
            },
            "method": "post",
            "path": "/entities/ip"
        }
    },
    "For_each": {
        "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
        "actions": {
            "Condition_-_if_IP_found_in_watchlist": {
                "actions": {
                    "Append_to_array_variable_-_add_to_safe_list": {
                    "runAfter": {},
                    "type": "AppendToArrayVariable",
                    "inputs": {
                        "name": "SafeIPs",
                        "value": {
                            "SafeIPs": "@{items('For_each')?['Address']}"
                        }
                    }
                }
            },
            "runAfter": {
                "Run_query_and_list_results": [
                    "Succeeded"
                ]
            },
            "else": {
                "actions": {
                    "Append_to_array_variable_-_add_to_not_safe_list": {
                    "runAfter": {},
                    "type": "AppendToArrayVariable",
                    "inputs": {
                        "name": "notSafeIPs",
                        "value": {
                            "NotSafeIPs": "@{items('For_each')?['Address']}"
                        }
                    }
                }
            }
        },
        "expression": {
            "and": [
                {
                    "greater": [
                        "@length(body('Run_query_and_list_results')?['value'])",
                        0
                    ]
                }
            ]
        },
        "type": "If",
        "description": "This condition returns true if IP was found in watchlist, and false if ip was not found."
    },
    "Run_query_and_list_results": {
    "runAfter": {},
    "type": "ApiConnection",
    "inputs": {
        "body": "_GetWatchlist(\"@{variables('WatchlistName')}\") \n| where ipv4_is_in_range(\"@{items('For_each')?['Address']}\",SearchKey)",
        "host": {
            "connection": {
                "name": "@parameters('$connections')['azuremonitorlogs_1']['connectionId']"
            }
        },
        "method": "post",
        "path": "/queryData",
        "queries": {
            "resourcegroups": "@triggerBody()?['workspaceInfo']?['ResourceGroupName']",
            "resourcename": "@triggerBody()?['workspaceInfo']?['WorkspaceName']",
            "resourcetype": "Log Analytics Workspace",
            "subscriptions": "@triggerBody()?['workspaceInfo']?['SubscriptionId']",
            "timerange": "Last 12 hours"
        }
    },
    "description": "Check if IP address is in watchlist"
}
},
"runAfter": {
"Entities_-_Get_IPs": [
    "Succeeded"
]
},
"type": "Foreach"
},
"Initialize_variable_-_Watchlist_name": {
"runAfter": {},
"type": "InitializeVariable",
"inputs": {
"variables": [
{
    "name": "WatchlistName",
    "type": "string",
    "value": "NetworkAddresses"
}
]
}
},
"Initialize_variable_-_not_safe_IPs": {
"runAfter": {
"Initialize_variable_-_safe_IPs": [
"Succeeded"
]
},
"type": "InitializeVariable",
"inputs": {
"variables": [
{
    "name": "notSafeIPs",
    "type": "array"
}
]
}
},
"Initialize_variable_-_safe_IPs": {
"runAfter": {
"Initialize_variable_-_Watchlist_name": [
"Succeeded"
]
},
"type": "InitializeVariable",
"inputs": {
"variables": [
{
    "name": "SafeIPs",
    "type": "array"
}
]
}
}
},
"outputs": {}
},
"parameters": {
"$connections": {
"value": {
"azuremonitorlogs_1": {
"connectionId": "[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
"connectionName": "[variables('AzuremonitorlogsConnectionName')]",
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
},
"azuresentinel_1": {
"connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
"connectionName": "[variables('MicrosoftSentinelConnectionName')]",
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
"connectionProperties": {
"authentication": {
"type": "ManagedServiceIdentity"
}
}
}
}
}
}
},
"name": "[parameters('PlaybookName')]",
"type": "Microsoft.Logic/workflows",
"location": "[resourceGroup().location]",
"tags": {
"Environment": "",
"Owner": "",
"Service": "CoreSub",
"hidden-SentinelTemplateName": "Watchlist-NetworkAddresses",
"hidden-SentinelTemplateVersion": "1.0"
},
"identity": {
"type": "SystemAssigned"
},
"apiVersion": "2017-07-01",
"dependsOn": [
"[resourceId('Microsoft.Web/connections', variables('AzuremonitorlogsConnectionName'))]",
"[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
]
},
{
"type": "Microsoft.Web/connections",
"apiVersion": "2016-06-01",
"name": "[variables('AzuremonitorlogsConnectionName')]",
"location": "[resourceGroup().location]",
"kind": "V1",
"properties": {
"displayName": "[variables('AzuremonitorlogsConnectionName')]",
"customParameterValues": {},
"api": {
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuremonitorlogs')]"
}
}
},
{
"type": "Microsoft.Web/connections",
"apiVersion": "2016-06-01",
"name": "[variables('MicrosoftSentinelConnectionName')]",
"location": "[resourceGroup().location]",
"kind": "V1",
"properties": {
"displayName": "[variables('MicrosoftSentinelConnectionName')]",
"customParameterValues": {},
"parameterValueType": "Alternative",
"api": {
"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
}
}
}
]
}
